openapi: 3.0.2
info:
  version: 0.0.0-replace
  title: CenterEdge Software Paytronix Integration API
  contact:
    name: Brant Burnett
    email: bburnett@centeredgesoftware.com
  license:
    name: See license agreement
  x-logo:
    url: https://raw.githubusercontent.com/CenterEdge/centeredge-resources/master/logo/2022/CenterEdge_Logo_Cmyk.svg
  description: CenterEdge Software Integration with Paytronix API
servers:
  - url: http://example.com/api/v1
paths:
  /check/post:
    post:
      tags:
        - Post
      summary: Post a check
      description: |
        The check post request allows for a full POS check to be submitted to the PXS diagnostic or data analysis purposes, 
        as well as the recording of billing events for our order and delivery integrations.
      operationId: checkPost
      security:
        - bearer_auth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkPost'
        description: The check to post
        required: true
      responses:
        description: Response from posting a check
        content:
          application/json:
            schema:
              $ref: ../schemas/checkPostResponseInfo.yaml
            example:
              code: badRequest
              message: Bad Request
  /check/postAndAccruePointsWithRedeem:
    post:
      tags:
        - PostAndAccruePoints
      summary: Post a check and accrue points
      description: |
        The check post and accrue points with redeem request is meant to follow a call to POST check/simulateAccrualAndRedemption.json, 
        enabling you to choose the discounts that are applied. These will be passed in through the Check object. 
        Its arguments are almost identical to the POST check/postAndAccruePointsWithAutoRedeem.json endpoint, merely requiring the addition of a receiptSettings object, 
        and not needing the autoActivateCard argument. If successfull, it will return a receipt.
      operationId: checkPostAndAccrue
      security:
        - bearer_auth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkPostAndAccrue'
        description: The check to post
        required: true
      responses:
        description: |
          Response information from a check post and accrue points call.
        oneOf:
          - $ref: ./schemas/checkPostAndAccrueSuccess.yaml
          - $ref: ./schemas/noWorkSuccess.yaml
          - $ref: ./schemas/error.yaml
        discriminator:
          propertyName: result
          mapping:
            success: ./schemas/checkPostAndAccrueSuccess.yaml
            noWorkSuccess: ./schemas/noWorkSuccess.yaml
            failed: ./schemas/error.yaml
  /check/simulateAccrualAndRedemption:
    post:
      tags:
        - SimulateAccrualAndRedemption
      summary: Simulate posting a check with redemption
      description: |
        The check simulate accrual and redemption request is similar to the post and accrue points with auto-redeem request, 
        with the difference that no points or rewards are actually applied. 
        Instead, this endpoint takes in a check (with the same parameters as in the previous endpoint) and additionally a list of already applied rewards, 
        the manner in which rewards are to be selected (either automatic or manual and specified with the request), and the details of the receipt printer associated with the request. 
        If successful, it will return the applicable discounts (see DiscountItem), 
        a list of attempted rewards that cannot be applied (including any previously applied rewards that are no longer applicable) and a new receipt text.
      operationId: checkSimulateAccrual
      security:
        - bearer_auth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkSimulateAccrual'
        required: true
      responses:
        description: |
          Response information from a check simulate accrual and redemption call.
        oneOf:
          - $ref: ./schemas/checkSimulateAccrualSuccess.yaml
          - $ref: ./schemas/error.yaml
        discriminator:
          propertyName: result
          mapping:
            success: ./schemas/checkSimulateAccrualSuccess.yaml
            failure: ./schemas/error.yaml
  /enrollment/smsEnroll:
    get:
      tags:
        - SMS Enrollment
      summary: Enroll in SMS
      description: |
        Enrolls the phone number in SMS notifications from Paytronix
      operationId: smsEnroll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smsEnroll'
        description: Phone number to enroll
        required: true
      security:
        - bearer_auth: []
      responses:
        description: |
          Response information from an sms enrollment call.
        oneOf:
          - $ref: ./schemas/smsEnrollSuccess.yaml
          - $ref: ./schemas/error.yaml
        discriminator:
          propertyName: result
          mapping:
            authorizedSuccess: ./schemas/smsEnrollSuccess.yaml
            failure: ./schemas/error.yaml.yaml
  /transaction/reverse:
    get:
      tags:
        - Reverse transaction
      summary: Reverses a transaction
      description: |
        A reverse request is used to reverse a previous transaction. Only transactions that happened in the last seven days can be reversed.
        The transaction to reverse can be specified in the message by one of the following combinations of request fields: 
        * The pxTransactionId from the original transaction reply 
        * The pxAuthCode from the original transaction reply and the card info used for the original transaction 
        * The posTransactionId and LP-code for the original transaction request type.
      operationId: reverse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reverse'
        required: true
      security:
        - bearer_auth: []
      responses:
        description: |
          Response information from a check reversal call.
        oneOf:
          - $ref: ./schemas/authorizedSuccess.yaml
          - $ref: ./schemas/authorizedVariantSuccess.yaml
          - $ref: ./schemas/transactionDenied.yaml
          - $ref: ./schemas/userDataError.yaml
          - $ref: ./schemas/transactionFailure.yaml
        discriminator:
          propertyName: result
          mapping:
            authorizedSuccess: ./schemas/authorizedSuccess.yaml
            authorizedVariantSuccess: ./schemas/authorizedVariantSuccess.yaml
            denied: ./schemas/transactionDenied.yaml
            userDataError: ./schemas/userDataError.yaml
            failure: ./schemas/transactionFailure.yaml.yaml
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
  schemas:
    checkPost:
      type: object
      properties:
        merchantId:
          type: integer
          description: Paytronix-assigned merchant ID to perform the operation in.
          example: 1107
        storeCode:
          type: string
          description: A short code to uniquely identify the store where this transaction occurred.
          example: corp
        check:
          type: object
          description: POS check to post.
      required:
        - merchantId
        - storeCode
        - check
    checkPostAndAccrue:
      type: object
      properties:
        merchantId:
          type: integer
          description: Paytronix-assigned merchant ID to perform the operation in.
          example: 1107
        storeCode:
          type: string
          description: A short code to uniquely identify the store where this transaction occurred.
          example: corp
        agentName:
          type: string
          description: The agent name. Used if a store has more than one POS system.
          example: PDQ POS
        check:
          type: object
          description: POS check to post.
        cardInfo:
          type: object
          description: Card to accrue points for.
        autoActivateCard:
          type: boolean
          description: True if the card should automatically be activated if it is not already active. Defaults to false
          default: false
          example: false
        terminal:
          type: string
          description: Number of the POS terminal where the check was submitted for accrual, usually by closing the check. Use "0" if the terminal is unknown or unavailable. Maximum of 100 characters.
          example: 1
        operator:
          type: string
          description: The POS operator (cashier) who submitted the check for accrual, usually by closing the check. Use "0" if the operator is unknown or unavailable.
          example: 0
        receiptSettings:
          type: array
          description: List of receipt settings
      required:
        - merchantId
        - storeCode
        - check
        - cardInfo
        - autoActivateCard
        - terminal
        - operator
        - receiptSettings
    cardInfo:
      type: object
      properties:
        printedCardNumber:
          type: string
          description: The number printed on the card
          example: 11235813213455
        trackInfo:
          type: string
          description: The complete track two of the magnetic swipe data without the beginning and ending sentinel characters.
          example: 1234567432131792=4711101792000
        phoneNumber:
          type: string
          description: Phone number uniquely identifying the guest. If the provided phone number is not unique, an error will be returned, and it is recommended that callers implement POST transaction/accountQuery.json instead.
          example: 9195551212
        barcode:
          type: string
          description: The barcode data for the card
          example: 11235813213455
        appleNfcVasPayload:
          type: string
          description: Base64 encoded Apple NFC VAS payload obtained from Apple NFC-enabled passes.
          example: 11235813213455
        googleNfcVasPayload:
          type: string
          description: Base64 encoded Google NFC VAS payload obtained from Google Passes using SmartTap protocol.
          example: 11235813213455
        accountToken:
          type: string
          description: Paytronix generated token that uniques identifies a loyalty account. Contact Paytronix for more details.
          example: 11235813213455
        cardRegCode:
          type: string
          description: Send only if you wish to verify the registration code for the card. If null, then this param will be ignored.
          example: 1234
        identificationMethod:
          type: string
          description: An optional field that indicates how the guest identified themselves when it cannot be infered from the request. This is only needed if the integrator has a printed card number that they obtained from some method other than the guest manually entering it (i.e. an account query). In this case the integrator would send a printedCardNumber but would send an identificationMethod of ACCOUNT_QUERY. Possible values are ACCOUNT_QUERY and LINKED_CC.
          example: ACCOUNT_QUERY
    chosenReward:
      type: object
      properties:
        walletCode:
          type: integer
          description: A numeric identifier for a specific type of discount, unique for a given merchant
          example: 4382
        amount:
          type: number
          format: decimal
          description: Represents either the discount amount if applied to an item, or the wallet balance if the reward is applied to the transaction.
          example: 1.25
      required:
        - walletCode
        - amount
    rewardSelectionMode:
      type: object
      properties:
        mode:
          type: string
          description: Either "automatic" or "manual". If manual, then chosenRewards is required
          example: automatic
        chosenRewards:
          type: array
          description: List of manually chosen rewards.
          items:
            $ref: '#/components/schemas/chosenReward'
      required:
        - mode
        - chosenRewards
    category:
      type: object
      properties:
        categoryType:
          type: string
          description: Either “major”, “minor”, or “promo”. Type of category if there are multiple types. Use “major” if there are no distinct category types.
          example: major
        id:
          type: string
          description: Identifier for the category. This identifies the category in the POS database.
          example: 123
        name:
          type: string
          description: Human-readable description of the menu item.
          example: Regular Fuel
      required:
        - categoryType
        - id
    potentialUnitItems:
      type: object
      properties:
        itemId:
          type: string
          description: Identifier for this item. This identifies the item in the Paytronix database, not the particular line item in the check.
          example: 1107
        name:
          type: string
          description: Human-readable description of the item.
          example: Item 3
        categories:
          type: array
          description: Can be empty. Any categories the menu item is associated with.
          items:
            $ref: '#/components/schemas/category'
        pricePerUnit:
          type: number
          format: decimal
          description: Per-unit price of the item. Expected to be positive.
          example: 1.25
      required:
        - itemId
        - categories
        - pricePerUnit
    receiptSettings:
      type: object
      properties:
        maxWidth:
          type: integer
          description: Maximum width of a receipt line
          example: 40
        name:
          type: string
          description: A name for the receipt setting
          example: myReceipt
      required:
        - maxWidth
        - name
    walletInformation:
      type: object
      properties:
        walletCode:
          type: integer
          description: A numeric identifier for a specific type of discount, unique for a given merchant
          example: 1
        amount:
        type: number
        format: decimal
          description: The amount to be redeemed from the wallet
          example: 1
      required:
        - itemizerType
        - id
    checkSimulateAccrual:
      type: object
      properties:
        merchantId:
          type: integer
          description: Paytronix-assigned merchant ID to perform the operation in.
          example: 1107
        storeCode:
          type: string
          description: A short code to uniquely identify the store where this transaction occurred.
          example: corp
        agentName:
          type: string
          description: The agent name. Used if a store has more than one POS system.
          example: PDQ POS
        check:
          type: object
          description: POS check to post.
        cardInfo:
          type: object
          description: Card to accrue points for.
          $ref: '#/components/schemas/cardInfo'
        autoActivateCard:
          type: boolean
          description: True if the card should automatically be activated if it is not already active. Defaults to false
          default: false
          example: false
        terminal:
          type: string
          description: Number of the POS terminal where the check was submitted for accrual, usually by closing the check. Use "0" if the terminal is unknown or unavailable. Maximum of 100 characters.
          example: 1
        operator:
          type: string
          description: The POS operator (cashier) who submitted the check for accrual, usually by closing the check. Use "0" if the operator is unknown or unavailable.
          example: 0
        rewardSelectionMode:
          type: object
          description: Identifies whether to use automatic, manual, or applicable_rewards reward selection.
          $ref: '#/components/schemas/rewardSelectionMode'
        potentialUnitItems:
          type: array
          description: A sequence of items which are dispensed by weight or volume and which are available to the guest. This is separate from items which have already been inserted into the check.
          minimum: 1
          items:
            $ref: '#/components/schemas/potentialUnitItems'
        receiptSettings:
          type: array
          description: List of receipt settings
          minimum: 1
          items:
            $ref: '#/components/schemas/receiptSettings'
        potentialUnitItemDiscounts:
          type: array
          description: List of discounts that have been applied to potential unit items
          minimum: 1
          items:
            $ref: '#/components/schemas/walletInformation'
      required:
        - merchantId
        - storeCode
        - check
        - cardInfo
        - autoActivateCard
        - terminal
        - operator
        - rewardSelectionMode
        - potentialUnitItems
        - receiptSettings
        - potentialUnitItemDiscounts
    smsEnroll:
      type: object
      properties:
        merchantId:
          type: integer
          description: the merchant id provided by paytronix
          example: 1107
        phoneNumber:
          type: string
          description: Phone number to enroll
          example: 3365040379
        activationStoreCode:
          type: string
          description: Paytronix store code where the activation transaction should be performed.
          example: corp
      required:
        - merchantId
        - phoneNumber
    headerInfo:
      type: object
      properties:
        merchantId:
          type: integer
          description: Paytronix-assigned merchant ID to perform the operation in.
          example: 1107
        storeCode:
          type: string
          description: A short code to uniquely identify the store where this transaction occurred.
          example: corp
        operatorId:
          type: string
          description: Identifier of the operator (cashier) who initiated the request. Use 0 if not known.
          example: 0
        terminalId:
          type: string
          description: Identifier of the POS terminal that initiated the request.
          example: 1023
        posTransactionId:
          type: string
          description: Check identifier (check number). This field is required for POST transaction/bulkActivateAdd.json requests. Maximum of 255 characters.
          example: 999999
        datetime:
          type: string
          description: Date and time the request was initiated. Formatted as ISO8601 date and time yyyy-mm-ddThh:mm:ss[.sss]
          example: '2004-06-01T13:10:01.001'
        posTransactionDatetime:
          type: string
          description: Date and time the check was opened.
          example: 2004-06-01 13:10
        senderId:
          type: string
          description: Indicates the type of sender. Always use POS unless instructed otherwise by Paytronix.
          example: POS
        programId:
          type: string
          description: Indicates the type of program being implemented
          enum:
            - LP
            - SV
            - CH
            - PX
      required:
        - merchantId
        - storeCode
        - operatorId
        - terminalId
        - posTransactionId
        - senderId
        - programId
    reverse:
      type: object
      properties:
        headerInfo:
          type: object
          $ref: '#/components/schemas/headerInfo'
        pxTransactionId:
          type: string
          description: The pxTransactionId from reply to transaction to reverse.
          example: 123456789
        pxAuthCode:
          type: string
          description: The pxAuthCode from reply to transaction to reverse.
          example: 123456789
        previousPosTransactionId:
          type: string
          description: The pxTransactionId from transaction to reverse.
          example: 123456789
        previousSequenceNumber:
          type: string
          description: The sequenceNumber from transaction to reverse.
          example: 1
        previousPosTransactionDatetime:
          type: string
          description: The posTransactionDatetime from transaction to reverse
          example: 2004-06-01 13:10
      required:
        - headerInfo
